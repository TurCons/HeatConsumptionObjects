<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewPlatform.Flexberry.Security</name>
    </assembly>
    <members>
        <member name="T:NewPlatform.Flexberry.Security.AgentHelper">
            <summary>
            Вспомогательный класс для работы с агентами.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentHelper._langDef">
            <summary>
            Определение языка ограничений для конструирования ограничивающих функций.
            </summary>
            <remarks>
            Использует переданный сервис данных.
            </remarks>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentHelper.Create(ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Создать новый экземпляр класса <see cref="T:NewPlatform.Flexberry.Security.AgentHelper"/>.
            </summary>
            <param name="dataService">Сервис данных, который будет использоваться для вычитки агентов из источника данных.</param>
            <returns>Экземпляр класса <see cref="T:NewPlatform.Flexberry.Security.AgentHelper"/>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentHelper.AddLinkedAgents(System.Guid,System.Collections.Generic.ICollection{System.Guid})">
            <summary>
            Добавить прилинкованных агентов.
            </summary>
            <param name="userKey">Идентификатор агента, для которого формируется список всех связанных.</param>
            <param name="agentPKs">Коллекция прилинкованных агентов.</param>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter">
            <summary>
            Класс со вспомогательными операциями над агентами для подсистемы аудита.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.DataServiceForAuditAgentManagerAdapterName">
            <summary>
            Имя сервиса данных в Unity для работы с агентами в рамках операций подсистемы аудита.
            Используется, если подсистема аудита не передает свой сконфигурированный сервис данных.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.DataService">
            <summary>
            Получение инстации сервиса данных.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.#cctor">
            <summary>
            Статический конструктор класса.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.GetDbUser(System.String,ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получение объекта, соответствующего текущему пользователю в БД полномочий.
            </summary>
            <param name="username">Полное имя пользователя.</param>
            <param name="dataService">Сервис данных.</param>
            <returns>Объект или <c>null</c>, если ничего не было найдено.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.CreateDbUser(System.String,System.String,System.Boolean,ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Создание пользователя в БД подсистемы полномочий.
            </summary>
            <param name="username">Логин пользователя, возможно с доменом.</param>
            <param name="friendlyUserName">Имя пользователя.</param>
            <param name="addDefaultRoles">Следует ли добавлять роли по умолчанию для создаваемого пользователя.</param>
            <param name="dataService">Сервис данных.</param>
            <returns>Созданный пользователь.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.GetAgentManager(ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получить инстанцию менеджера агентов для операций с агентами в выполнения операций аудита.
            </summary>
            <remarks>
            Если сервис данных не задан, то используется сервис данных с именем <see cref="F:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.DataServiceForAuditAgentManagerAdapterName"/> из Unity.
            </remarks>
            <param name="dataService">Сервис данных для менеджера агентов.</param>
            <returns>Инстанция менеджера агентов для работы с агентами в рамках выполнения операций аудита.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AuditAgentManagerAdapter.GetNewAgentManager(ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получить новую инстанцию менеджера агентов с указанным сервисом данных.
            </summary>
            <param name="dataService">Сервис данных для менеджера агентов.</param>
            <returns>Новая инстанция менеджера агентов с указанным сервисом данных.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.EmptyAgentManager">
            <summary>
            Фейковый менеджер агентов.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.EmptyAgentManager.CurrentSecurityUser">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.EmptyAgentManager.IsCurrentSecurityUserAnAgentManager">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.EmptyAgentManager.IsCurrentSecurityUserAnSecurityManager">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.CreateUser(System.String,System.String,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.CreateRole(System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.CreateGroup(System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.RemoveUser(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.RemoveRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.RemoveGroup(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.AddUserToGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.AddAgentToRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.RemoveUserFromGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.RemoveAgentFromRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsUserExist(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsUserExist(System.String,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsUserExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsRoleExist(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsRoleExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsGroupExist(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsGroupExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsUserInRole(System.String,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsUserInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsCurrentUserInRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsCurrentUserInRole(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsRoleInRole(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.IsRoleInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetRolesOfUser(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetUsersInRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetNestedRoles(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForUser(System.String,System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForUser(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForRole(System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForRole(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForGroup(System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.GetAgentForGroup(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyAgentManager.ClearCache">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.EmptyPasswordHasher">
            <summary>
            Имплементация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> без хеширования паролей.
            </summary>
            <remarks>
            Используйте данную имплементацию для обратной совместимости с устаревшими классами полномочий.
            </remarks>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyPasswordHasher.Hash(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.EmptyPasswordHasher.Hash(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.LimitFunctionArithmetic">
            <summary>
            Арифметика функций задания ограничений. Методы позволяют добавлять или удалять отдельные компоненты функций.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.LimitFunctionArithmetic.AddElementToFuncIn(ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.Windows.Forms.ExternalLangDef)">
            <summary>
            Метод, который в базовую функцию к параметрам добавляет новые значения.
            </summary>
            <param name="baseFunction">Базовая функция, в которую будет производиться добавление. Должна быть функцией <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcIN"/> или <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcEQ"/>.</param>
            <param name="functionForAdd">Функция, которая описывает добавляемую часть. Первым параметром должна быть <see cref="T:ICSSoft.STORMNET.FunctionalLanguage.VariableDef"/>, а последующие параметры будут прибавлены к параметрам базовой функции.</param>
            <param name="langDef">Определение языка ограничений для конструирования ограничивающих функций.</param>
            <returns>Базовая функция с добавленными параметрами.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.LimitFunctionArithmetic.AddFunction(ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.Windows.Forms.ExternalLangDef)">
            <summary>
            Метод, который добавляет функцию в существующее ограничение путем объединения двух функций через ИЛИ.
            </summary>
            <param name="baseFunction">Базовая функция.</param>
            <param name="functionForAdd">Функция, которая добавляется в ограничение.</param>
            <param name="langDef">Определение языка ограничений для конструирования ограничивающих функций.</param>
            <returns>Результирующая функция, объединяющая через ИЛИ две исходные.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.LimitFunctionArithmetic.RemoveElementFromFuncIn(ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Удаление элемента из базовой функции. Если удаляются все параметры, то возвращается <c>null</c>.
            </summary>
            <param name="baseFunction">Базовая функция <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcIN"/> или <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcEQ"/>, из которой будет произведено удаление.</param>
            <param name="functionForRemove">Функция, описывающая равенство между описанием атрибута <see cref="T:ICSSoft.STORMNET.FunctionalLanguage.VariableDef"/> и его значением (значениями). Все значения будут удалены из базовой функции, если обнаружатся.</param>
            <returns>Базовая функция без параметров, которые требовалось из неё удалить.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.LimitFunctionArithmetic.RemoveFunction(ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Удаление внутренней функции из базовой функции.
            </summary>
            <param name="baseFunction">Базовая функция <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcOR"/>, из которой будет произведено удаление.</param>
            <param name="functionForRemove">Функция, которую нужно удалить из базовой.</param>
            <returns>Оставшийся операнд исхдной базовой функции.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.BasePasswordHasher">
            <summary>
            Базовая имплементация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> с использованием алгоритма хеширования .NET.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.BasePasswordHasher.Salt">
            <summary>
            Соль для хеширования пароля.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.#ctor">
            <summary>
            /// Инициализирует новую инстанцию класса.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.#ctor(System.String)">
            <summary>
            /// Инициализирует новую инстанцию класса.
            </summary>
            <param name="salt">Соль для хеширования пароля.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.Hash(System.String)">
            <summary>
            Получить хеш для указанного пароля.
            </summary>
            <remarks>
            Если соль была указана к конструкторе, она будет учитываться при вызове этого метода. 
            </remarks>
            <param name="password">Пароль пользователя в открытом виде.</param>
            <returns>Хеш пароля.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="password"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается при ошибке применения алгоритма хеширования.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.Hash(System.String,System.String)">
            <summary>
            Получить хеш для указанного пароля с использованием соли.
            </summary>
            <remarks>
            В данной реализации метода соль, указанная в конструкторе класса, не учитывается.
            </remarks>
            <param name="password">Пароль пользователя в открытом виде.</param>
            <param name="salt">Соль, которая будет применяться при хешировании.</param>
            <returns>Хеш пароля.</returns>
            <remarks>Алгоритм для данного метода должен наследоваться от класса <see cref="T:System.Security.Cryptography.HMAC"/></remarks>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="password"/> или <paramref name="salt"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается при ошибке применения алгоритма хеширования.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.GetHashAlgorithm">
            <summary>
            Возвращает алгоритм хеширования для варианта без соли.
            </summary>
            <returns>.NET-алгоритм хеширования.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.BasePasswordHasher.GetHashAlgorithmWithKey">
            <summary>
            Возвращает алгоритм хеширования для варианта с солью.
            </summary>
            <returns>.NET-алгоритм хеширования для варианта с солью.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.DomainHelper">
            <summary>
            Класс по помощи в работе с доменом
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.DomainHelper.ExtractLoginAndDomain(System.String,System.String@)">
            <summary>
            Извлечь логин и домен из имени пользователя. Парсится строка вида: ICS_HOME\vpupkin или ICS_HOME@vpupkin.
            </summary>
            <param name="username">Имя пользователя. В формате vpupkin, ICS_HOME\vpupkin или ICS_HOME@vpupkin.</param>
            <param name="domain">Домен. Для строки ICS_HOME\vpupkin или ICS_HOME@vpupkin вернём: ICS_HOME.</param>
            <returns>Логин. Для строки ICS_HOME\vpupkin или ICS_HOME@vpupkin вернём: vpupkin.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.IPasswordHasher">
            <summary>
            Базовый интерфейс для классов, предназначенных для получения хеша пароля пользователя.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IPasswordHasher.Hash(System.String)">
            <summary>
            Получить хеш для указанного пароля.
            </summary>
            <param name="password">Пароль пользователя в открытом виде.</param>
            <returns>Хеш пароля.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="password"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IPasswordHasher.Hash(System.String,System.String)">
            <summary>
            Получить хеш для указанного пароля с использованием соли.
            </summary>
            <param name="password">Пароль пользователя в открытом виде.</param>
            <param name="salt">Соль.</param>
            <returns>Хеш пароля.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="password"/> или <paramref name="salt"/>.</exception>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.IAgentManager">
            <summary>
            Базовый интерфейс для менеджера пользователей.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.IAgentManager.CurrentSecurityUser">
            <summary>
            Агент, соответствующий текущему пользователю системы.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.IAgentManager.IsCurrentSecurityUserAnAgentManager">
            <summary>
            Проверка наличия прав у текущего пользователя управлять агентами через менеджер агентов.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.IAgentManager.IsCurrentSecurityUserAnSecurityManager">
            <summary>
            Проверка наличия прав у текущего пользователя управлять полномочиями через менеджер полномочий.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.CreateUser(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Создание нового пользователя.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="userPassword">Пароль пользователя.</param>
            <param name="email">Email пользователя.</param>
            <param name="name">Имя пользователя.</param>
            <param name="isEnabled">Флаг установки активности пользователя. Если <c>true</c> - пользоватль включен, <c>false</c> - пользователь отключен. По умолчанию - <c>true</c>.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/> или <paramref name="userPassword"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
            <returns>Истанция агента для созданнго пользователя.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.Boolean)">
            <summary>
            Обновить информацию о профиле пользователя.
            </summary>
            <remarks>
            Текущий пароль пользователя не изменяется.
            </remarks>
            <param name="user">Пользователь, профиль которого нужно обновить.</param>
            <param name="isEnabled">Флаг установки активности пользователя. Если <c>true</c> - пользоватль включен, <c>false</c> - пользователь отключен.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
            <returns>Истанция агента для обновленного пользователя.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String)">
            <summary>
            Обновить информацию о профиле пользователя.
            </summary>
            <param name="user">Пользователь, профиль которого нужно обновить.</param>
            <param name="oldPassword">Старый пароль пользователя.</param>
            <param name="newPassword">Новый пароль пользователя.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="newPassword"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами или когда указан неправильный старый пароль.</exception>
            <returns>Истанция агента для обновленного пользователя.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.Boolean)">
            <summary>
            Обновить информацию о профиле пользователя.
            </summary>
            <remarks>
            Текущий пароль пользователя не изменяется.
            </remarks>
            <param name="user">Пользователь, профиль которого нужно обновить.</param>
            <param name="newName">Новое имя пользователя.</param>
            <param name="newEmail">Новый Email пользователя.</param>
            <param name="isEnabled">Флаг установки активности пользователя. Если <c>true</c> - пользоватль включен, <c>false</c> - пользователь отключен.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
            <returns>Истанция агента для обновленного пользователя.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Обновить информацию о профиле пользователя.
            </summary>
            <param name="user">Пользователь, профиль которого нужно обновить.</param>
            <param name="oldPassword">Старый пароль пользователя.</param>
            <param name="newPassword">Новый пароль пользователя.</param>
            <param name="newName">Новое имя пользователя.</param>
            <param name="newEmail">Новый Email пользователя.</param>
            <param name="isEnabled">Флаг установки активности пользователя. Если <c>true</c> - пользоватль включен, <c>false</c> - пользователь отключен.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="newPassword"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами или когда указан неправильный старый пароль.</exception>
            <returns>Истанция агента для обновленного пользователя.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.CreateRole(System.String,System.Boolean)">
            <summary>
            Создание новой роли.
            </summary>
            <param name="roleName">Имя роли.</param>
            <param name="isEnabled">Флаг установки активности роли. Если <c>true</c> - роль включена, <c>false</c> - поль отключена. По умолчанию - <c>true</c>.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
            <returns>Истанция агента для созданной роли.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.CreateGroup(System.String,System.Boolean)">
            <summary>
            Создание новой группы.
            </summary>
            <param name="groupName">Имя группы.</param>
            <param name="isEnabled">Флаг установки активности группы. Если <c>true</c> - группа включена, <c>false</c> - группа отключена. По умолчанию - <c>true</c>.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="groupName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
            <returns>Истанция агента для созданной группы.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.RemoveUser(System.String,System.String)">
            <summary>
            Удаление пользователя с указанными данными.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="domainName">Домен пользователя.</param>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько пользователей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.RemoveRole(System.String)">
            <summary>
            Удаление роли.
            </summary>
            <param name="roleName">Имя роли.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.RemoveGroup(System.String)">
            <summary>
            Удаление группы.
            </summary>
            <param name="groupName">Имя группы.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="groupName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.AddUserToGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Добавление пользователя в группу.
            </summary>
            <param name="user">Пользователь, которого необходимо добавить в группу.</param>
            <param name="group">Группа, в которую необходимо добавить пользователя.</param>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда указанный пользователь уже содержится в указанной группе.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="group"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.AddAgentToRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Добавление агента (пользователя или роли) в роль.
            </summary>
            <param name="agent">Агент, которого необходимо добавить в роль.</param>
            <param name="role">Роль, в которую необходимо добавить агента.</param>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда указанный агент уже содержится в указанной роли.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="agent"/> или <paramref name="role"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.RemoveUserFromGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Удаление пользователя из группы.
            </summary>
            <param name="user">Пользователь, которого необходимо удалить из группы.</param>
            <param name="group">Группа, из которой необходимо удалить пользователя.</param>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда указанный пользователь не содержится в указанной группе.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="group"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.RemoveAgentFromRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Удаление агента (пользователя или роли) из роли.
            </summary>
            <param name="agent">Агент, которого необходимо удалить из роли.</param>
            <param name="role">Роль, из которой необходимо удалить агента.</param>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда указанный агент не содержится в указанной роли.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="agent"/> или <paramref name="role"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsUserExist(System.String,System.String)">
            <summary>
            Проверка существования пользователя с указанными данными.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="domainName">Домен пользователя.</param>
            <returns>Возвращает <c>true</c>, если пользователь с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько пользователей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsUserExist(System.String,System.String,System.String)">
            <summary>
            Проверка существования пользователя с указанными данными.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="domainName">Домен пользователя.</param>
            <param name="userPassword">Пароль пользователя</param>
            <returns>Возвращает <c>true</c>, если пользователь с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько пользователей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, кодга указан неправильный параметр <paramref name="userLogin"/> или <paramref name="userPassword"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsUserExist(NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка существования пользователя с указанными данными.
            </summary>
            <param name="user">Пользователь, существование которого необходимо проверить.</param>
            <returns>Возвращает <c>true</c>, если пользователь с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько пользователей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsRoleExist(System.String)">
            <summary>
            Проверка существования роли с указанными данными.
            </summary>
            <param name="roleName">Имя роли.</param>
            <returns>Возвращает <c>true</c>, если роль с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько ролей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsRoleExist(NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка существования роли с указанными данными.
            </summary>
            <param name="role">Имя роли, существование которой необходимо проверить.</param>
            <returns>Возвращает <c>true</c>, если роль с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько ролей с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="role"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsGroupExist(System.String)">
            <summary>
            Проверка существования группы с указанными данными.
            </summary>
            <param name="groupName">Имя группы.</param>
            <returns>Возвращает <c>true</c> если группа с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько групп с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="groupName"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsGroupExist(NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка существования группы с указанными данными.
            </summary>
            <param name="group">Группа, существование которой необходимо проверить.</param>
            <returns>Возвращает <c>true</c> если группа с указанными данными существует.</returns>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда в источнике данных содержатся несколько групп с одинаковыми данными.</exception>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="group"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsUserInRole(System.String,System.String,System.String)">
            <summary>
            Проверка включения пользователя в роль.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="domainName">Домен пользователя.</param>
            <param name="roleName">Имя роли.</param>
            <returns>
            Возвращает <c>true</c>, если пользователь входит в роль.
            Возвращает <c>false</c>, если пользователь не входит в роль.
            </returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/> или <paramref name="roleName"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsUserInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка включения пользователя в роль.
            </summary>
            <param name="user">Пользователь, которого надо проверить на включение в роль.</param>
            <param name="role">Роль, в которую проверяется включение пользователя.</param>
            <returns>
            Возвращает <c>true</c>, если пользователь входит в роль.
            Возвращает <c>false</c>, если пользователь не входит в роль.
            </returns>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="role"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsCurrentUserInRole(System.String)">
            <summary>
            Проверка включения текущего пользователя в роль.
            </summary>
            <param name="roleName">Имя роли.</param>
            <returns>
            Возвращает <c>true</c>, если текущий пользователь входит в роль.
            Возвращает <c>false</c>, если текущий пользователь не входит в роль.
            </returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/> или когда текущий пользователь полномочий отсутствует.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsCurrentUserInRole(NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка включения текущего пользователя в роль.
            </summary>
            <param name="role">Роль, в которую выполняется проверка включения текущего пользователя.</param>
            <returns>
            Возвращает <c>true</c>, если текущий пользователь входит в роль.
            Возвращает <c>false</c>, если текущий пользователь не входит в роль.
            </returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда текущий пользователь полномочий отсутствует.</exception>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="role"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsRoleInRole(System.String,System.String)">
            <summary>
            Проверка вложенности роли в другую роль.
            </summary>
            <param name="nestedRoleName">Имя роли, вложение которой проверяется в другую роль.</param>
            <param name="roleName">Имя роли, в которой проверяется вложенность другой роли.</param>
            <returns>
            Возвращает <c>true</c>, если роль вложена в указанную другую роль.
            Возвращает <c>false</c>, если роль не вложена в указанную другую роль.
            </returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="nestedRoleName"/> или <paramref name="roleName"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.IsRoleInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <summary>
            Проверка вложенности роли в другую роль.
            </summary>
            <param name="nestedRole">Роль, вложение которой проверяется в другую роль.</param>
            <param name="role">Роль, в которой проверяется вложенность другой роли.</param>
            <returns>
            Возвращает <c>true</c>, если роль вложена в указанную другую роль.
            Возвращает <c>false</c>, если роль не вложена в указанную другую роль.
            </returns>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когда указан неправильный параметр <paramref name="nestedRole"/> или <paramref name="role"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetRolesOfUser(System.String,System.String)">
            <summary>
            Получить все роли для указанного пользователя.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="domainName">Домен пользователя.</param>
            <returns>Возвращает все роли пользователя. Не возвращает <c>null</c>.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetUsersInRole(System.String)">
            <summary>
            Получить всех пользователей в указанной роли.
            </summary>
            <param name="roleName">Имя роли.</param>
            <returns>Возвращает всех пользователей, которые входят в указанную роль. Не возвращает <c>null</c>.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда роль не была найдена в источнике данных.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetNestedRoles(System.String)">
            <summary>
            Получить вложенные роли для указанной.
            </summary>
            <param name="roleName">Имя роли.</param>
            <returns>Возвращает вложенные роли. Не возвращает <c>null</c>.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда роль не была найдена в источнике данных.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForUser(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующего пользователю с указанными данными.
            </summary>
            <param name="userLogin">Логин пользователя.</param>
            <param name="userDomain">Имя домена, в который входит пользователь.</param>
            <param name="enabled">Нужны ли только неотключенные пользователи?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий пользователю с указанными данными.</returns>
            <remarks></remarks>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="userLogin"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда пользователь не был найден в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько пользователей с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForUser(System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующего пользователю с указанными данными.
            </summary>
            <param name="agentKey">Ключ объекта данных пользователя.</param>
            <param name="enabled">Нужны ли только неотключенные пользователи?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий пользователю с указанными данными.</returns>
            <remarks></remarks>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда пользователь не был найден в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько пользователей с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForRole(System.String,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующий указанной роли.
            </summary>
            <param name="roleName">Имя роли.</param>
            <param name="enabled">Нужны ли только неотключенные роли?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий указанной роли.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="roleName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда роль не была найдена в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько ролей с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForRole(System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующий указанной роли.
            </summary>
            <param name="agentKey">Ключ объекта данных роли.</param>
            <param name="enabled">Нужны ли только неотключенные роли?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий указанной роли.</returns>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда роль не была найдена в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько ролей с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForGroup(System.String,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующий указанной группе.
            </summary>
            <param name="groupName">Имя группы.</param>
            <param name="enabled">Нужны ли только неотключенные группы?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий указанной группе.</returns>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="groupName"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда группа не была найдена в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько групп с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.GetAgentForGroup(System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Получить агента полномочий, соответствующий указанной группе.
            </summary>
            <param name="agentKey">Ключ объекта данных группы.</param>
            <param name="enabled">Нужны ли только неотключенные группы?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию - <c>true</c>.</param>
            <returns>Агент полномочий, соответствующий указанной группе.</returns>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда группа не была найдена в источнике данных.</exception>
            <exception cref="T:System.InvalidOperationException">Выбрасывается, когда было найдено несколько групп с указанными данными.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.IAgentManager.ClearCache">
            <summary>
            Очистить кеш менеджера агентов.
            </summary>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.Md5PasswordHasher">
            <summary>
            Имплементация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> с использованием алгоритма MD5.
            </summary>
            <remarks>Использование алгоритма MD5 может вызвать проблемы безопасности - лучше использовать <see cref="T:NewPlatform.Flexberry.Security.Sha256PasswordHasher"/>.
            Используйте данную имплементацию только для обратной совместимости.
            </remarks>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Md5PasswordHasher.#ctor">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Md5PasswordHasher"/>.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Md5PasswordHasher.#ctor(System.String)">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Md5PasswordHasher"/>.
            </summary>
            <param name="salt">Соль для хеширования пароля.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Md5PasswordHasher.GetHashAlgorithm">
            <summary>
            Возвращает алгоритм MD5 для получения хеша.
            </summary>
            <returns>.NET-алгоритм хеширования MD5.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Md5PasswordHasher.GetHashAlgorithmWithKey">
            <summary>
            Возвращает алгоритм MD5 для получения хеша для варианта с солью.
            </summary>
            <returns>.NET-алгоритм хеширования MD5 для варианта с солью.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.FlexberryMembershipProvider">
            <summary>
            Провайдер членства пользователей.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.AgentManager">
            <summary>
            Получение инстации менеджера агентов.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.ApplicationName">
            <summary>
            Имя приложения.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Смена пароля.
            </summary>
            <param name="username">Имя пользователя, которому меняем пароль.</param>
            <param name="oldPassword">Старый пароль пользователя (для проверки).</param>
            <param name="newPassword">Новый устанавливаемый пароль пользователя.</param>
            <returns>Результат изменения пароля.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Создать пользователя.
            </summary>
            <param name="username">Логин пользователя.</param>
            <param name="password">Пароль пользователя.</param>
            <param name="email">Электронный адрес пользователя.</param>
            <param name="passwordQuestion">Секретный вопрос.</param>
            <param name="passwordAnswer">Секретный ответ.</param>
            <param name="isApproved">Является ли пользователь утверждённым.</param>
            <param name="providerUserKey">Ключ пользователя (в нашем случае - логин).</param>
            <param name="status">Статус создания пользователя.</param>
            <returns>Созданный пользователь.</returns>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.EnablePasswordReset">
            <summary>
            Возможно обнулять пароль, <see cref="!:ResetPassword()"/>
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.EnablePasswordRetrieval">
            <summary>
            Получить пароли в исходном виде невозможно
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Получаем пользователя по его имени.
            </summary>
            <param name="username">Имя пользователя.</param>
            <param name="userIsOnline">Значение <c>true</c>, чтобы обновить метку даты и времени последней операции пользователя. Значение <c>false</c>, чтобы вернуть информацию пользователя без обновления метки даты и времени последней операции пользователя. </param>
            <returns>Найденный пользователь или <c>null</c>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Получаем пользователя по его ключу (у нас в качестве ключа используется логин пользователя).
            </summary>
            <param name="providerUserKey">Ключ пользователя (у нас в качестве ключа используется логин пользователя).</param>
            <param name="userIsOnline">Значение <c>true</c>, чтобы обновить метку даты и времени последней операции пользователя. Значение <c>false</c>, чтобы вернуть информацию пользователя без обновления метки даты и времени последней операции пользователя.</param>
            <returns>Найденный пользователь или <c>null</c>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.ResetPassword(System.String,System.String)">
            <summary>
            Сбрасываем пароль и возвращаем только что сгенеренный
            </summary>
            <param name="username"></param>
            <param name="answer"></param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Обновление пользователя.
            </summary>
            <param name="user">Информация о пользователе (пароля не содержит). </param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Проверить пользователя по нашей БД с полномочиями.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Проведение инициализации провайдера по настройкам из файла конфигурации.
            </summary>
            <param name="name">Имя провайдера в файле конфигурации.</param>
            <param name="config">Секция конфига, соответствующая настройкам провайдера.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.GetAgentForUser(System.String)">
            <summary>
            Получить агента по имени пользователя.
            </summary>
            <param name="username">Имя пользователя</param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryMembershipProvider.InitializeProvider(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Проведение инициализации провайдера по настройкам из конфигурации.
            </summary>
            <param name="config">Секция конфига, соответствующая настройкам провайдера.</param>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.FlexberryProfileProvider">
            <summary>
            Провайдер профиля пользователя.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryProfileProvider.AgentManager">
            <summary>
            Получение инстации менеджера агентов.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Получить значения свойств.
            </summary>
            <param name="context"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Установить значения свойств.
            </summary>
            <param name="context"></param>
            <param name="collection"></param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryProfileProvider.GetAgentForUser(System.String)">
            <summary>
            Получить агента по имени пользователя.
            </summary>
            <param name="username">Имя пользователя</param>
            <returns></returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.FlexberryRoleProvider">
            <summary>
            Провайдер ролей.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryRoleProvider.AgentManager">
            <summary>
            Получение инстации менеджера агентов.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Добавить роли для пользователей.
            </summary>
            <param name="usernames"></param>
            <param name="roleNames"></param>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.FlexberryRoleProvider.ApplicationName">
            <summary>
            Имя приложения.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.CreateRole(System.String)">
            <summary>
            Создание роли.
            </summary>
            <param name="roleName">Имя роли.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.GetRolesForUser(System.String)">
            <summary>
            Получить список ролей текущего пользователя.
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.GetUsersInRole(System.String)">
            <summary>
            Получить пользователей, принадлежащих роли.
            </summary>
            <param name="roleName">Имя роли</param>
            <returns>Массив логинов</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>
            Проверить есть ли такая роль у пользователя.
            </summary>
            <param name="username">логин пользователя</param>
            <param name="roleName">имя роли</param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Удаление пользователей из ролей.
            </summary>
            <param name="usernames">Имена пользователей.</param>
            <param name="roleNames">Имена ролей.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.RoleExists(System.String)">
            <summary>
            Проверка на существование роли.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Проведение инициализации провайдера по настройкам из файла конфигурации.
            </summary>
            <param name="name">Имя провайдера в файле конфигурации.</param>
            <param name="config">Секция конфига, соответствующая настройкам провайдера.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.GetAgentForUser(System.String)">
            <summary>
            Получить агента по имени пользователя.
            </summary>
            <param name="username">Имя пользователя.</param>
            <returns></returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.FlexberryRoleProvider.InitializeProvider(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Проведение инициализации провайдера по настройкам из конфигурации.
            </summary>
            <param name="config">Секция конфига, соответствующая настройкам провайдера.</param>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.Resources.Text">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentAlreadyInRoleExceptionTemplate">
            <summary>
              Looks up a localized string similar to Agent &quot;{0}&quot; already exists in role &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentIsNotFoundInRoleExceptionTemplate">
            <summary>
              Looks up a localized string similar to Agent &quot;{0}&quot; is not found in role &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentIsNotGroupExceptionText">
            <summary>
              Looks up a localized string similar to Agent must be an group..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentIsNotRoleExceptionText">
            <summary>
              Looks up a localized string similar to Agent must be an role..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentIsNotUserExceptionText">
            <summary>
              Looks up a localized string similar to Agent must be an user..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.AgentIsNotUserOrRoleExceptionText">
            <summary>
              Looks up a localized string similar to Agent must be an user or role..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.CanNotAddRoleToItselfExceptionText">
            <summary>
              Looks up a localized string similar to Can not include role to itself..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.GroupIsNotLoadedExceptionTempalte">
            <summary>
              Looks up a localized string similar to Group &quot;{0}&quot; is not found in Flexberry Security. Check the IDataService instance, that is used for SecurityManager..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.HashingAlgorithmIsNotSpecifiedExceptionText">
            <summary>
              Looks up a localized string similar to Hashing algorithm is null..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleGroupsExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple groups with name &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleGroupsWithSpecifiedKeyExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple groups with key &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleRolesExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple roles with name &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleRolesWithSpecifiedKeyExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple roles with key &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleUsersExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple users with login &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.MultipleUsersWithSpecifiedKeyExceptionTempalte">
            <summary>
              Looks up a localized string similar to Multiple users with key &quot;{0}&quot; in the data source..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.NotEnoughPermissionsExceptionText">
            <summary>
              Looks up a localized string similar to Current user doesn&apos;t have permissions to complete operation. Please add &quot;AgentManager&quot; operation to current user..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.PrimaryKeyForAgentIsNotSetExceptionText">
            <summary>
              Looks up a localized string similar to Primary key for agent is not set..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.RoleIsNotLoadedExceptionTempalte">
            <summary>
              Looks up a localized string similar to Role &quot;{0}&quot; is not found in Flexberry Security. Check the IDataService instance, that is used for SecurityManager..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.SaltForHashingAlgorithmIsNotSpecifiedExceptionText">
            <summary>
              Looks up a localized string similar to Salt for hashing algorithm is not specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.UserAlreadyInGroupExceptionTemplate">
            <summary>
              Looks up a localized string similar to User with login &quot;{0}&quot; already exists in group &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.UserIsNotFoundInGroupExceptionTemplate">
            <summary>
              Looks up a localized string similar to User with login &quot;{0}&quot; is not found in group &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.UserIsNotLoadedExceptionTempalte">
            <summary>
              Looks up a localized string similar to User with login &quot;{0}&quot; is not found in Flexberry Security. Check the IDataService instance, that is used for SecurityManager..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.UserWithSpecifiedKeyIsNotLoadedExceptionTempalte">
            <summary>
              Looks up a localized string similar to User with key &quot;{0}&quot; is not found in Flexberry Security. Check the IDataService instance, that is used for SecurityManager..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongAgentGuidException">
            <summary>
              Looks up a localized string similar to Guid of security Agent should not be null..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongGroupNameExceptionText">
            <summary>
              Looks up a localized string similar to Group name must to be specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongLoginExceptionText">
            <summary>
              Looks up a localized string similar to Login must to be specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongOldPasswordExceptionTemplate">
            <summary>
              Looks up a localized string similar to Wrong old password for user with login &quot;{0}&quot; is specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongPasswordExceptionText">
            <summary>
              Looks up a localized string similar to Password must to be specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongRoleNameExceptionText">
            <summary>
              Looks up a localized string similar to Role name must to be specified..
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.Resources.Text.WrongUserNameExceptionText">
            <summary>
              Looks up a localized string similar to User name must to be specified..
            </summary>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.SecurityCacheTags">
            <summary>
            Теги для кеша системы полномочий. Следует использовать эти теги для очистки кеша.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityCacheTags.SecurityCacheMainTag">
            <summary>
            Основной тег, который применяется ко всем кешируемым объектам полномочий.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityCacheTags.AgentManagerCacheTag">
            <summary>
            Тег, который используется в <see cref="T:NewPlatform.Flexberry.Security.AgentManager"/>.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityCacheTags.SecurityManagerCacheTag">
            <summary>
            Тег, который используется в <see cref="T:NewPlatform.Flexberry.Security.SecurityManager"/>.
            </summary>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.SecurityInitializer">
            <summary>
            Вспомогательный класс для инициализации полномочий в Composition Root.
            </summary>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.SecurityManager">
            <summary>
            Реализация <see cref="T:ICSSoft.STORMNET.Security.ISecurityManager"/> по умолчанию.
            </summary>
            <remarks>
            Является заменой устаревшей реализации менеджера полномочий <see cref="!:DefaultSecurityManager"/> на основе 
            <see cref="!:RightManager"/>. В ближайшем будущем эти классы будут отмечены как "obsolete", а затем удалены.
            <para />
            Текущий пользователь для всех связанных действий определяется через <see cref="T:ICSSoft.Services.CurrentUserService"/>.
            </remarks>
            <summary>
            Реализация <see cref="T:ICSSoft.STORMNET.Security.ISecurityManager"/> по умолчанию.
            </summary>
            <remarks>
            Является заменой устаревшей реализации менеджера полномочий <see cref="!:DefaultSecurityManager"/> на основе 
            <see cref="!:RightManager"/>. В ближайшем будущем эти классы будут отмечены как "obsolete", а затем удалены.
            <para />
            Текущий пользователь для всех связанных действий определяется через <see cref="T:ICSSoft.Services.CurrentUserService"/>.
            </remarks>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityManager._dataService">
            <summary>
            Сервис данных, использующийся для загрузки объектов полномочий.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityManager._currentUser">
            <summary>
            Текущий пользователь системы, для которого анализируются полномочия (для <see cref="P:NewPlatform.Flexberry.Security.SecurityManager.CurrentUser"/>).
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityManager.LangDef">
            <summary>
            Определение языка ограничений для конструирования ограничивающих функций.
            </summary>
            <remarks>
            Использует сервис данных менеджера полномочий.
            При создании функций ограничения следует использовать именно данную инстанцию,
            а не статическое свойство <c>ExternalLangDef.LanguageDef</c>.
            </remarks>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.SecurityManager.CacheService">
            <summary>
            Кеш для данной инстанции <see cref="T:NewPlatform.Flexberry.Security.SecurityManager"/>.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.SecurityManager.CurrentUser">
            <summary>
            Текущий пользователь системы, для которого анализируются полномочия.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.#ctor(ICSSoft.STORMNET.Business.IDataService,NewPlatform.Flexberry.Caching.ICacheService)">
            <summary>
            Создаётся сервис полномочий, в котором проверка полномочий включена.
            </summary>
            <param name="dataService">Сервис данных для загрузки информации о полномочиях.</param>
            <param name="cacheService">Сервис кеширования.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.#ctor(ICSSoft.STORMNET.Business.IDataService,NewPlatform.Flexberry.Caching.ICacheService,System.Boolean)">
            <summary>
            Указать будут ли полномочия включены.
            </summary>
            <param name="dataService">Сервис данных для загрузки информации о полномочиях.</param>
            <param name="cacheService">Сервис кеширования.</param>
            <param name="enabled">Полномочия будут проверяться, если <c>true</c>.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.#ctor(ICSSoft.STORMNET.Business.IDataService,NewPlatform.Flexberry.Caching.ICacheService,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Конструктор менеджера полномочий.
            </summary>
            <param name="dataService">Сервис данных для загрузки информации о полномочиях.</param>
            <param name="cacheService">Сервис кеширования.</param>
            <param name="enabled">Полномочия будут проверяться, если <c>true</c>.</param>
            <param name="useRightsOnObjects">Полномочия над объектами будут проверяться, если <c>true</c>.</param>
            <param name="useRightsOnAttribute">Полномочия над атрибутами будут проверяться, если <c>true</c>.</param>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.SecurityManager.Enabled">
            <summary>
            Флаг включенных полномочий.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.SecurityManager.UseRightsOnObjects">
            <summary>
            Флаг включенных полномочий над объектами.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.SecurityManager.UseRightsOnAttribute">
            <summary>
            Флаг включенных полномочий над атрибутами. 
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.SecurityManager.AttributeCheckExpressionPattern">
            <summary>
            Регулярное выражение для извлечения информации о контроле прав на атрибуты из <see cref="T:ICSSoft.STORMNET.DataServiceExpressionAttribute"/>.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AccessCheck(System.Int32)">
            <summary>
            Проверка полномочий на выполнение операции.
            </summary>
            <remarks>Проверяется только наличие записи, но не тип доступа.</remarks>
            <param name="operationId">Идентификатор операции.</param>
            <returns>
            Если у текущего пользователя есть доступ, то <c>true</c>.
            Возвращает <c>true</c> без проверок если полномочия выключены в <see cref="P:NewPlatform.Flexberry.Security.SecurityManager.Enabled"/>.
            </returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AccessObjectCheck(System.Type,ICSSoft.STORMNET.Security.tTypeAccess,System.Boolean)">
            <summary>
            Проверка полномочий на выполнение операции с типом.
            </summary>
            <param name="type">Тип объекта данных.</param>
            <param name="operation">Тип операции.</param>
            <param name="throwException">Генерировать ли исключение в случае отсутствия прав.</param>
            <returns>
            Если у текущего пользователя есть доступ, то <c>true</c>.
            Возвращает <c>true</c> без проверок если полномочия выключены в <see cref="P:NewPlatform.Flexberry.Security.SecurityManager.Enabled"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Исключение генерируется при передаче <c>null</c> в качестве значения для <paramref name="type"/>.</exception>
            <exception cref="T:ICSSoft.STORMNET.UnauthorizedAccessException">
            Исключение генерируется в том случае, если у пользователя отсутствует доступ и параметр <paramref name="throwException"/> установлен в <c>true</c>.
            </exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AccessObjectCheck(System.Object,ICSSoft.STORMNET.Security.tTypeAccess,System.Boolean)">
            <summary>
            Проверка полномочий на выполнение операции с объектом.
            </summary>
            <param name="obj">Объект данных.</param>
            <param name="operation">Тип операции.</param>
            <param name="throwException">Генерировать ли исключение в случае отсутствия прав.</param>
            <returns>Если у текущего пользователя есть доступ, то <c>true</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Исключение генерируется при передаче <c>null</c> в качестве значения для <paramref name="obj"/>.</exception>
            <exception cref="T:ICSSoft.STORMNET.UnauthorizedAccessException">
            Исключение генерируется в том случае, если у пользователя отсутствует доступ и параметр <paramref name="throwException"/> установлен в <c>true</c>.
            </exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CheckExistLogin(System.String)">
            <summary>
            Проверить наличие в системе логина (чувствительность к регистру зависит от настроек источника данных).
            Уникальность проверяется без контроля доменов, то есть гарантируется уникальность в рамках всей таблицы.
            Отключенные пользователи тоже учитываются, как занимающие логин.
            </summary>
            <param name="login">Логин, который проверяем.</param>
            <returns>Если логин свободен, то <see cref="F:ICSSoft.STORMNET.Security.OperationResult.ЛогинСвободен"/>, если занят, то <see cref="F:ICSSoft.STORMNET.Security.OperationResult.ЛогинЗанят"/>.</returns>
            <exception cref="T:System.ArgumentException">Исключение генерируется при передаче <c>null</c> или <c>string.Empty</c> в качестве значения для <paramref name="login"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CheckAccessToAttribute(System.String,System.String@)">
            <summary>
            Метод проверки прав на доступ текущего пользователя к операции, заданной в <see cref="T:ICSSoft.STORMNET.DataServiceExpressionAttribute"/> атрибута.
            </summary>
            <remarks>
            Не поддерживается в текущей реализации.
            </remarks>
            <param name="expression">Строка <see cref="T:ICSSoft.STORMNET.DataServiceExpressionAttribute"/>.</param>
            <param name="deniedAccessValue">Значение, которое должен получить атрибут при отсутствии прав.</param>
            <returns>Если у текущего пользователя есть доступ, то <c>true</c>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetSubjectTypeName(System.Type)">
            <summary>
            Получение имени типа для системы полномочий в терминах физического хранения в СУБД.
            Данная реализация <see cref="T:ICSSoft.STORMNET.Security.ISecurityManager"/> поддерживает только режим, когда в БД хранятся значения <c>type.FullName</c>.
            </summary>
            <param name="type">Тип, для которого нужно получить имя.</param>
            <returns>Строковое имя типа, с которым будут работать внутренние механизмы системы полномочий.</returns>
            <exception cref="T:System.ArgumentNullException">Исключение генерируется при передаче <c>null</c> в качестве значения для <paramref name="type"/>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CheckRightsToDataObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Security.tTypeAccess)">
            <summary>
            Проверить полномочия на конкретный объект.
            </summary>
            <param name="dataObject">Объект данных, на который проверяем полномочия.</param>
            <param name="operation">Вид полномочий, на который проверяем полномочия.</param>
            <returns>Доступен ли объект для выполнения требуемой операции.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AccessCheck(System.String)">
            <summary>
            Проверка полномочий на выполнение операции.
            </summary>
            <remarks>Проверяется только наличие записи, но не тип доступа.</remarks>
            <param name="operationId">Идентификатор операции.</param>
            <returns>
            Если у текущего пользователя есть доступ, то <c>true</c>.
            Возвращает <c>true</c> без проверок если полномочия выключены в <see cref="P:NewPlatform.Flexberry.Security.SecurityManager.Enabled"/>.
            </returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CheckTypeAccess(System.Type,ICSSoft.STORMNET.Security.tTypeAccess)">
            <summary>
            Проверка полномочий на выполнение операции с типом.
            Реализует всю логику проверки доступа к типу, в т.ч. с учетом наследования (через <see cref="F:ICSSoft.STORMNET.AccessType.base"/>)  и <see cref="F:ICSSoft.STORMNET.AccessType.this_and_base"/>.
            </summary>
            <param name="type">Тип объекта данных.</param>
            <param name="operation">Тип операции.</param>
            <returns>Если у текущего пользователя есть доступ, то <c>true</c>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.ClearCache">
            <summary>
            Метод для очистки кеша менеджера полномочий.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetAccessTypeAttribute(System.Type)">
            <summary>
            Метод для загрузки атрибута <see cref="T:ICSSoft.STORMNET.AccessTypeAttribute"/> для типа.
            </summary>
            <param name="type">Тип, для которого нужно загрузить атрибут.</param>
            <returns>Экземпляр атрибута или <c>null</c>, если атрибут не был найден.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetUserOwnPermition(ICSSoft.Services.CurrentUserService.IUser,System.Type)">
            <summary>
            Метод для получения экземпляра объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/> для конкретного пользователя. Получаются только "личные" экземпляры, без учёта наследования ролей.
            </summary>
            <param name="user">Пользователь, для которого получаем объект полномочий.</param>
            <param name="subjectType">Тип объекта данных.</param>
            <returns>Экземпляр объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/> для конкретного пользователя. Получаются только собственные экземпляры, без учёта наследования ролей.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetRoleOwnPermition(System.String,System.Type)">
            <summary>
            Метод для получения экземпляра объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/> для конкретной роли. Получаются только "личные" экземпляры, без учёта наследования ролей.
            </summary>
            <param name="roleName">Название роли, для которой получаем объект полномочий.</param>
            <param name="subjectType">Тип объекта данных.</param>
            <returns>Экземпляр объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/> для конкретной роли. Получаются только собственные экземпляры, без учёта наследования ролей.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddLinkedAgents(System.Guid,System.Collections.Generic.ICollection{System.Guid})">
            <summary>
            Добавить прилинкованных агентов.
            </summary>
            <param name="userKey">Идентификатор агента, для которого формируется список всех связанных.</param>
            <param name="agentPKs">Коллекция прилинкованных агентов.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetCurrentUserAgentKey(System.Nullable{System.Boolean})">
            <summary>
            Получить для текущего пользователя (<see cref="P:NewPlatform.Flexberry.Security.SecurityManager.CurrentUser"/>) ключ агента в базе полномочий.
            TODO: объединить с реализацией из CheckingInSessionMode + AuthenticationAdapter.
            </summary>
            <param name="enabled">Нужны ли только неотключенные пользователи?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию true.</param>
            <returns>
            Массив пользователей, удовлетворяющих данному критерию. Ожидается, что будет возвращён только один пользователь.
            В любом случае применяется ограничение TOP 2.
            </returns>
            <exception cref="T:System.Security.SecurityException">Исключение генерируется в случае, если ключ агента не найден.</exception>
            <exception cref="T:System.InvalidOperationException">
            Исключение генерируется в случае, если сервис данных вернул несколько агентов. Это означает, что в БД есть дубликаты пользователей.
            </exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetAgentKeyByIUser(ICSSoft.Services.CurrentUserService.IUser,System.Nullable{System.Boolean})">
            <summary>
            Получить ключ агента в базе полномочий для указанного пользователя.
            </summary>
            <param name="user">Пользователь, для которого мы получаем ключ агента.</param>
            <param name="enabled">Нужны ли только неотключенные пользователи?
            <c>true</c> - включенные, <c>false</c> - отключенные, <c>null</c> - все. По умолчанию true.</param>
            <returns>Ключ агента.</returns>
            <exception cref="T:System.Security.SecurityException">Исключение генерируется в случае, если ключ агента не найден.</exception>
            <exception cref="T:System.InvalidOperationException">
            Исключение генерируется в случае, если сервис данных вернул несколько агентов. Это означает, что в БД есть дубликаты пользователей.
            </exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetAgentKeyByRoleName(System.String)">
            <summary>
            Получить ключ <see cref="T:ICSSoft.STORMNET.Security.Agent"/> для указанного имени роли.
            </summary>
            <param name="roleName">Название роли.</param>
            <returns>Первичный ключ объекта данных типа <see cref="T:ICSSoft.STORMNET.Security.Agent"/>, который соответствует переданному <paramref name="roleName"/>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetSubjectKeyByType(System.Type)">
            <summary>
            Получить ключ <see cref="T:ICSSoft.STORMNET.Security.Subject"/> для указанного типа данных.
            </summary>
            <param name="subjectType">Тип данных, для которого ищем ключ.</param>
            <returns>Первичный ключ объекта данных типа <see cref="T:ICSSoft.STORMNET.Security.Subject"/>, который соответствует переданному <paramref name="subjectType"/>.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetLimitForAccess(System.Type,ICSSoft.STORMNET.Security.tTypeAccess,System.Object@,System.Boolean@)">
            <summary>
            Получить ограничение для текущего пользователя.
            </summary>
            <remarks>
            Не поддерживается в текущей реализации.
            </remarks>
            <param name="subjectType">Тип объекта.</param>
            <param name="operation">Тип операции.</param>
            <param name="limit">Ограничение, которое есть для текущего пользователя.</param>
            <param name="canAccess">Есть ли доступ к этому типу у пользователя.</param>
            <returns>Результат выполнения операции.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetLimitStrForRoles(System.Type,System.Collections.Generic.List{ICSSoft.STORMNET.Security.RoleWithAccesses}@)">
            <summary>
            Получить роли с заданными ограничениями, которые реализуют функцию разграничения по объектам.
            </summary>
            <remarks>
            Не поддерживается в текущей реализации.
            </remarks>
            <param name="type">Класс, для которого получаем ограничения.</param>
            <param name="rolesWithAccesses">Роли с заданными ограничениями для этих ролей.</param>
            <returns>Результат выполнения операции.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.SetLimitStrForRole(System.Type,ICSSoft.STORMNET.Security.tTypeAccess,System.String,System.String)">
            <summary>
            Задать ограничение для указанной роли.
            </summary>
            <remarks>
            Не поддерживается в текущей реализации.
            </remarks>
            <param name="type">Тип объектов данных, для которых будет применяться данный фильтр.</param>
            <param name="operation">Тип доступа, для которого применяется этот фильтр.</param>
            <param name="roleName">Название роли.</param>
            <param name="filter">Сериализованный фильтр, который будет применяться для указанной роли.</param>
            <returns>Результат выполнения операции.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddPermissionToObject(ICSSoft.Services.CurrentUserService.IUser,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавить полномочия на указанный объект данных.
            </summary>
            <param name="user">Пользователь, для которого добавляются полномочия.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="dataObject">Объект, на который добавляются полномочия (используется только первичный ключ).</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddPermissionToObject(System.String,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавить полномочия на указанный объект данных.
            </summary>
            <param name="roleName">Название роли, для которой добавляются полномочия.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="dataObject">Объект, на который добавляются полномочия (используется только первичный ключ).</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionToObject(ICSSoft.Services.CurrentUserService.IUser,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.DataObject)">
            <summary>
            Удалить полномочия на указанный объект данных.
            </summary>
            <param name="user">Пользователь, для которого удаляются полномочия.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="dataObject">Объект, на который удаляются полномочия (используется только первичный ключ).</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionToObject(System.String,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.DataObject)">
            <summary>
            Удалить полномочия на указанный объект данных.
            </summary>
            <param name="roleName">Название роли, для которой удаляются полномочия.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="dataObject">Объект, на который удаляются полномочия (используется только первичный ключ).</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddPermissionFilter(ICSSoft.Services.CurrentUserService.IUser,System.Type,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Установка разрешения для доступа к конкретному объекту данных для указанного пользователя.
            </summary>
            <param name="user">Пользователь, который получит разрешение.</param>
            <param name="subjectType">Тип объектов данных, на который даётся разрешение.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Функция, которая будет установлена. Если это функция <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcEQ"/>, то для соответствующего поля произойдёт добавление в функцию <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcIN"/>.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddPermissionFilter(System.String,System.Type,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Установка разрешения для доступа к конкретному объекту данных для указанной роли.
            </summary>
            <param name="roleName">Имя роли, которая получит разрешение.</param>
            <param name="subjectType">Тип объектов данных, на который даётся разрешение.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Функция, которая будет установлена. Если это функция <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcEQ"/>, то для соответствующего поля произойдёт добавление в функцию <see cref="P:ICSSoft.STORMNET.FunctionalLanguage.SQLWhere.SQLWhereLanguageDef.funcIN"/>.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionFilter(ICSSoft.Services.CurrentUserService.IUser,System.Type,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Удаление фильтра в разрешении для доступа к конкретному объекту данных для указанного пользователя. Сам объект <see cref="T:ICSSoft.STORMNET.Security.Permition"/> и соответствующий объект <see cref="T:ICSSoft.STORMNET.Security.Access"/> не удаляется, если даже фильтр будет пустым.
            </summary>
            <param name="user">Пользователь, для которого удаляем фильтр в разрешении.</param>
            <param name="subjectType">Тип объектов данных, для которого удаляется фильтр в разрешении.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Ограничивающая функция, значения которой будут удалены из ранее сохранённого фильтра.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionFilter(ICSSoft.Services.CurrentUserService.IUser,System.Type,ICSSoft.STORMNET.Security.tTypeAccess)">
            <summary>
            Полное удаление фильтра в разрешении для доступа к конкретному объекту данных для указанного пользователя. Сам объект <see cref="T:ICSSoft.STORMNET.Security.Permition"/> и соответствующий объект <see cref="T:ICSSoft.STORMNET.Security.Access"/> не удаляется.
            </summary>
            <param name="user">Пользователь, для которого удаляем фильтр в разрешении.</param>
            <param name="subjectType">Тип объектов данных, для которого удаляется фильтр в разрешении.</param>
            <param name="typeAccess">Тип доступа.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionFilter(System.String,System.Type,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Удаление фильтра в разрешении для доступа к конкретному объекту данных для указанной роли.
            </summary>
            <param name="roleName">Имя роли, которая получит разрешение.</param>
            <param name="subjectType">Тип объектов данных, на который даётся разрешение.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Ограничивающая функция, значения которой будут удалены из ранее сохранённого фильтра.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemovePermissionFilter(System.String,System.Type,ICSSoft.STORMNET.Security.tTypeAccess)">
            <summary>
            Полное удаление фильтра в разрешении для доступа к конкретному объекту данных для указанной роли.
            </summary>
            <param name="roleName">Имя роли, которая получит разрешение.</param>
            <param name="subjectType">Тип объектов данных, на который даётся разрешение.</param>
            <param name="typeAccess">Тип доступа.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.GetLimitForAccess(System.Guid,System.String,ICSSoft.STORMNET.Security.tTypeAccess,System.String[]@,System.Boolean@)">
            <summary>
            Получить все субъекты, на которые есть права у данного пользователя.
            </summary>
            <param name="userKey">Пользователь, для которого определяем субъектов.</param>
            <param name="subjectName">Объект, для которого получаем ограничение.</param>
            <param name="operationName">Имя операции, которое должно соответствовать одному из значений tTypeAccess, иначе будет OperationResult.ОшибочныеАргументы.</param>
            <param name="limits">Ограничения (от всех унаследованных ролей).</param>
            <param name="canAccess">Есть ли разрешения у пользователя на этот объект.</param>
            <returns>Результат выполнения операции.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CreatePermitionWithFilter(System.Type,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function,System.Guid,System.String)">
            <summary>
            Создание объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/> для переданных параметрами объектов полномочий с фильтром.
            </summary>
            <param name="subjectType">Тип объекта данных.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Ограничивающая функция, описывающая фильтр.</param>
            <param name="agentKey">Ключ агента (пользователя или роли).</param>
            <param name="agentName">Имя роли или пользователя.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.UpdatePermitionWithFilter(ICSSoft.STORMNET.Security.Permition,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function,System.String)">
            <summary>
            Обновление объекта полномочий <see cref="T:ICSSoft.STORMNET.Security.Permition"/> с наложенным фильтром.
            </summary>
            <param name="permition">Объект полномочий.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Ограничивающая функция, описывающая фильтр.</param>
            <param name="agentName">Имя роли или пользователя.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemoveFilterFromPermition(ICSSoft.STORMNET.Security.Permition,ICSSoft.STORMNET.Security.tTypeAccess,ICSSoft.STORMNET.FunctionalLanguage.Function,System.String)">
            <summary>
            Удаление фильтра из переданного объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/>.
            </summary>
            <param name="permition">Объект полномочий.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="limitFunction">Ограничивающая функция, описывающая фильтр.</param>
            <param name="agentName">Имя роли или пользователя.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemoveFilterFromPermition(ICSSoft.STORMNET.Security.Permition,ICSSoft.STORMNET.Security.tTypeAccess,System.String)">
            <summary>
            Удаление фильтра из переданного объекта <see cref="T:ICSSoft.STORMNET.Security.Permition"/>.
            </summary>
            <param name="permition">Объект полномочий.</param>
            <param name="typeAccess">Тип доступа.</param>
            <param name="agentName">Имя роли или пользователя.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.ConvertLimitFunctionToFilterString(ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Конвертация функции ограничения в сериализованное представление, используемой в фильтрах.
            </summary>
            <param name="limitFunction">Функция ограничения, которую будем сериализовать.</param>
            <returns>Сериализованное ограничение.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.ConvertFilterStringToLimitFunction(System.String)">
            <summary>
            Конвертация сериализованного представления, используемого в фильтрах, в функцию ограничения.
            </summary>
            <param name="serializedLimitFunction">Сериализованное ограничение.</param>
            <returns>Функция ограничения.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.AddLimitFunctionToFilter(ICSSoft.STORMNET.FunctionalLanguage.Function,System.String)">
            <summary>
            Добавление функции ограничения доступа к объектам.
            </summary>
            <param name="limitFunction">Функция, описывающая доступ к объекту, которая будет добавлена к фильтру.</param>
            <param name="existingFilter">Текущий сериализованный фильтр на доступ.</param>
            <returns>Сериализованное ограничение.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.RemoveLimitFunctionFromFilter(ICSSoft.STORMNET.FunctionalLanguage.Function,System.String)">
            <summary>
            Удаление функции ограничения доступа к объектам.
            </summary>
            <param name="functionForRemove">Функция, описывающая доступ к объекту, которая будет удалена из фильтра.</param>
            <param name="existingFilter">Текущий сериализованный фильтр на доступ.</param>
            <returns>Сериализованное ограничение.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.SecurityManager.CreateLimitFunctionForObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Создание функции ограничения для доступа на документ.
            </summary>
            <param name="dataObject">Документ, на который мы определяем доступ.</param>
            <returns>Сформированная функция ограничения.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.Sha1PasswordHasher">
            <summary>
            Реализация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> с использованием алгоритма SHA1.
            </summary>
            <remarks>Использование алгоритма SHA1 может вызвать проблемы безопасности - лучше использовать <see cref="T:NewPlatform.Flexberry.Security.Sha256PasswordHasher"/>.
            Используйте данную имплементацию только для обратной совместимости.
            </remarks>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha1PasswordHasher.#ctor">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Sha1PasswordHasher"/>.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha1PasswordHasher.#ctor(System.String)">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Sha1PasswordHasher"/>.
            </summary>
            <param name="salt">Соль для хеширования пароля.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha1PasswordHasher.GetHashAlgorithm">
            <summary>
            Возвращает алгоритм SHA1 для получения хеша.
            </summary>
            <returns>.NET-алгоритм хеширования SHA1.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha1PasswordHasher.GetHashAlgorithmWithKey">
            <summary>
            Возвращает алгоритм SHA1 для получения хеша для варианта с солью.
            </summary>
            <returns>.NET-алгоритм хеширования SHA1 для варианта с солью.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.Sha256PasswordHasher">
            <summary>
            Реализация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> с использованием алгоритма SHA256.
            </summary>
            <remarks>Использование алгоритма SHA256 в настоящий момент является наиболее безопасным и рекомендуется к использованию вместо <see cref="T:NewPlatform.Flexberry.Security.Sha1PasswordHasher"/>
            и <see cref="T:NewPlatform.Flexberry.Security.Md5PasswordHasher"/>.
            </remarks>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha256PasswordHasher.#ctor">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Sha256PasswordHasher"/>.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha256PasswordHasher.#ctor(System.String)">
            <summary>
            /// Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.Sha256PasswordHasher"/>.
            </summary>
            <param name="salt">Соль для хеширования пароля.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha256PasswordHasher.GetHashAlgorithm">
            <summary>
            Возвращает алгоритм SHA1 для получения хеша.
            </summary>
            <returns>.NET-алгоритм хеширования SHA256.</returns>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.Sha256PasswordHasher.GetHashAlgorithmWithKey">
            <summary>
            Возвращает алгоритм SHA256 для получения хеша для варианта с солью.
            </summary>
            <returns>.NET-алгоритм хеширования SHA256 для варианта с солью.</returns>
        </member>
        <member name="T:NewPlatform.Flexberry.Security.AgentManager">
            <summary>
            Имплементация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IAgentManager"/> по умолчанию с использованием объектной модели Flexberry Security и Flexberry ORM.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager.DisableAuditFlag">
            <summary>
            Имя динамического свойства объекта полномочий, показывающего, что аудит данного объекта писать не нужно.
            </summary>
            <remarks>Используется в сборках аудита.</remarks>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager.DefaultRoles">
            <summary>
            Название настройки из конфигурационного файла, в которой указываются роли пользователя, назначаемые ему по умолчанию.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager._dataService">
            <summary>
            Сервис данных для загрузки данных.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager._passwordHasher">
            <summary>
            Имплементация интерфейса <see cref="T:NewPlatform.Flexberry.Security.IPasswordHasher"/> для хеширования пароля.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager._langDef">
            <summary>
            Определение языка ограничений для конструирования ограничивающих функций.
            </summary>
            <remarks>
            Использует сервис данных менеджера полномочий.
            При создании функций ограничения следует использовать именно данную инстанцию,
            а не статическое свойство <c>_langDef</c>.
            </remarks>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.AgentManager.PasswordHasher">
            <summary>
            Получение инстации хешера паролей.
            </summary>
        </member>
        <member name="F:NewPlatform.Flexberry.Security.AgentManager.CacheService">
            <summary>
            Кеш для данной инстанции <see cref="T:NewPlatform.Flexberry.Security.AgentManager"/>.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.AgentManager.CurrentSecurityUser">
            <summary>
            Агент, соответствующий текущему пользователю системы.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.AgentManager.IsCurrentSecurityUserAnAgentManager">
            <summary>
            Проверка наличия прав у текущего пользователя управлять агентами через менеджер агентов.
            </summary>
        </member>
        <member name="P:NewPlatform.Flexberry.Security.AgentManager.IsCurrentSecurityUserAnSecurityManager">
            <summary>
            Проверка наличия прав у текущего пользователя управлять полномочиями через менеджер полномочий.
            </summary>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.#ctor(ICSSoft.STORMNET.Business.IDataService,NewPlatform.Flexberry.Caching.ICacheService)">
            <summary>
            Инициализирует новую инстанцию класса <see cref="T:NewPlatform.Flexberry.Security.AgentManager"/>.
            </summary>
            <param name="dataService">Сервис данных для загрузки данных.</param>
            <param name="cacheService">Сервис для кеширования данных.</param>
            <exception cref="T:System.ArgumentNullException">Выбрасывается, когдапараметр <paramref name="dataService"/> равен <c>null</c>.</exception>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsUserExist(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsUserExist(System.String,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsUserExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.CreateUser(System.String,System.String,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.String,System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.CreateRole(System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.CreateGroup(System.String,System.Boolean)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.RemoveUser(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.RemoveRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.RemoveGroup(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.AddAgentToRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.AddUserToGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.RemoveUserFromGroup(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.RemoveAgentFromRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsRoleExist(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsRoleExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsGroupExist(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsGroupExist(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsUserInRole(System.String,System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsUserInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsCurrentUserInRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsCurrentUserInRole(NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsRoleInRole(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.IsRoleInRole(NewPlatform.Flexberry.Security.IAgent,NewPlatform.Flexberry.Security.IAgent)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetRolesOfUser(System.String,System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetUsersInRole(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetNestedRoles(System.String)">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForUser(System.String,System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForUser(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForRole(System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForRole(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForGroup(System.String,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.GetAgentForGroup(System.Guid,System.Nullable{System.Boolean})">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.ClearCache">
            <inheritdoc cref="T:NewPlatform.Flexberry.Security.IAgentManager"/>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.AddLinkedRoles(System.Guid,System.Collections.Generic.ICollection{System.Guid})">
            <summary>
            Добавить прилинкованные дочерние роли.
            </summary>
            <param name="roleKey">Идентификатор роли, для которой формируется список всех дочерних.</param>
            <param name="agentPKs">Коллекция прилинкованных дочерних ролей.</param>
        </member>
        <member name="M:NewPlatform.Flexberry.Security.AgentManager.UpdateUser(NewPlatform.Flexberry.Security.IAgent,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Обновить информацию о профиле пользователя.
            </summary>
            <param name="user">Пользователь, профиль которого нужно обновить.</param>
            <param name="oldPassword">Старый пароль пользователя.</param>
            <param name="newPassword">Новый пароль пользователя.</param>
            <param name="newName">Новое имя пользователя.</param>
            <param name="newEmail">Новый Email пользователя.</param>
            <param name="isEnabled">Флаг установки активности пользователя. Если <c>true</c> - пользоватль включен, <c>false</c> - пользователь отключен.</param>
            <param name="updatePassword">Если данный флаг установлен, то надо изменить пароль пользователя.</param>
            <exception cref="T:System.ArgumentException">Выбрасывается, когда указан неправильный параметр <paramref name="user"/> или <paramref name="newPassword"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Выбрасывается, когда у текущего пользователя нет операции для управления агентами или когда указан неправильный старый пароль.</exception>
        </member>
    </members>
</doc>
